// Generated using https://edotor.net/
// See https://graphviz.gitlab.io/
// Note the OntologyClass and TimeElement edges are commented-out for greater clarity of the output
digraph phenopacket_schema_v2 {
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    rankdir = BT
    splines = "true"

    label = "Phenopacket schema v2.0"

    node [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    shape = "record"
    ]

    edge [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    ]

    // base.proto
    subgraph base {

    OntologyClass [
    label = "{OntologyClass | + id: String\l + label: String\l}"
    ]

    ExternalReference [
    label = "{ExternalReference| id: String\l name: String\l url: String\l version: String\l namespace_prefix: String\l iri_prefix: string\l}"
    ]

    Evidence [
    label = "{Evidence| evidence_code: OntologyClass\l reference: ExternalReference\l}"
    ]

    Value [
    label = "{Value| value: \{Quantity \| OntologyClass\} }"
    ]

    ComplexValue [
    label = "{ComplexValue| typed_quantity: TypedQuantity\l}"
    ]

    TypedQuantity [
    label = "{TypedQuantity| type: OntologyClass\l quantity: Quantity\l}"
    ]

    Quantity [
    label = "{Quantity| unit_class: OntologyClass\l value: double\l reference_range: ReferenceRange\l}"
    ]

    ReferenceRange [
    label = "{ReferenceRange| unit: OntologyClass\l low: double\l high: double\l}"
    ]

    Sex [
    label = "{Sex \<enum\>| 0 = UNKNOWN_SEX\l 1 = FEMALE\l 2 = MALE\l 3 = OTHER_SEX\l}"
    ]

    KaryotypicSex [
    label = "{KaryotypicSex \<enum\>| 0 = UNKNOWN_KARYOTYPE\l 1 = XX\l 2 = XY\l 3 = XO\l 4 = XXY\l 5 = XXX\l 6 = XXYY\l 7 = XXXY\l 8 = XXXX\l 9 = XYY\l 10 = OTHER_KARYOTYPE\l}"
    ]

    Procedure [
    label = "{Procedure| code: OntologyClass\l body_site: OntologyClass\l performed: TimeElement\l}"
    ]

    GestationalAge [
    label = "{GestationalAge| days: Integer\l weeks: Integer\l}"
    ]

    Age [
    label = "{Age| iso8601Duration: String\l}"
    ]

    AgeRange [
    label = "{AgeRange| start: Age\l end: Age\l}"
    ]

    TimeInterval [
    label = "{TimeInterval| start: Timestamp\l end: Timestamp\l}"
    ]

    TimeElement [
    label = "{TimeElement| element: \{GestationalAge \| Age \| AgeRange \| Timestamp \| TimeInterval \| OntologyClass \}}"
    ]

    // base.proto
    OntologyClass

    //    OntologyClass -> Value
    Quantity -> Value

    TypedQuantity -> ComplexValue
    //    OntologyClass -> TypedQuantity
    Quantity -> TypedQuantity
    //    OntologyClass -> Quantity
    ReferenceRange -> Quantity
    //    OntologyClass -> ReferenceRange

    Sex
    KaryotypicSex

    //    OntologyClass -> Procedure
    //    TimeElement -> Procedure

    GestationalAge -> TimeElement
    Age -> TimeElement
    Age -> AgeRange
    AgeRange -> TimeElement
    Timestamp -> TimeInterval
    Timestamp -> TimeElement
    TimeInterval -> TimeElement
    }

    // biosample.proto
    Biosample [
    label = "{Biosample| id: String\l individual_id: String\l derived_from_id: String\l description: String\l sampled_tissue: OntologyClass\l sample_type: OntologyClass\l phenotypic_features: PhenotypicFeature [0..*]\l measurements: Measurement [0..*]\l taxonomy: OntologyClass\l time_of_collection: TimeElement\l histological_diagnosis: OntologyClass\l tumor_progression: OntologyClass\l tumor_grade: OntologyClass\l pathological_stage: OntologyClass\l pathological_tnm_finding: OntologyClass [0..*]\l diagnostic_markers: OntologyClass [0..*]\l procedure: Procedure\l hts_files: HtsFile [0..*]\l material_sample: OntologyClass\l sample_processing: OntologyClass\l sample_storage: OntologyClass\l}"
    ]

    //    OntologyClass -> Biosample
    PhenotypicFeature -> Biosample
    Procedure -> Biosample
    HtsFile -> Biosample
    //    TimeElement -> Biosample
    Measurement -> Biosample


    // disease.proto
    Disease [
    label = "{Disease| term: OntologyClass\l excluded: Boolean\l onset: TimeElement\l resolution: TimeElement\l disease_stage: OntologyClass [0..*]\l clinical_tnm_finding: OntologyClass [0..*]\l primary_site: OntologyClass\l laterality:OntologyClass\l}"
    ]
    //    OntologyClass -> Disease
    //    TimeElement -> Disease

    // genome.proto
    HtsFile [
    label = "{HtsFile| uri: String\l description: String\l hts_format: HtsFormat\l genome_assembly: String\l individual_to_sample_identifiers: Map\<String, String\>\l}"
    ]

    HtsFormat [
    label = "{HtsFormat \<enum\>| 0 = UNKNOWN\l 1 = SAM\l 2 = BAM\l 3 = CRAM\l 4 = VCF\l 5 = BCF\l 6 = GVCF\l 7 = FASTQ\l }"
    ]

    Gene [
    label = "{Gene| id: String\l alternate_ids: String [0..*]\l symbol: String\l}"
    ]

    Variant [
    label = "{Variant| allele: \{\HgvsAllele \| VcfAllele \| SpdiAllele \| IscnKaryotype\}\l zygosity: OntologyClass\l}"
    ]

    HgvsAllele [
    label = "{HgvsAllele| id: String\l hgvs: String\l}"
    ]

    VcfAllele [
    label = "{VcfAllele| id: String\l genome_assembly: String\l chr: String\l pos: Integer\l ref: String\l alt: String\l info: String\l end: String\l sv_type: String\l sv_length: String\l mate_id: String\l event_id: String\l}"
    ]

    SpdiAllele [
    label = "{SpdiAllele| id: String\l seq_id: String\l position: Integer\l deleted_sequence: String\l inserted_sequence: String\l }"
    ]

    IscnKaryotype [
    label = "{IscnKaryotype| id: String\l iscn: String\l}"
    ]

    subgraph genomeProto {
    HtsFormat -> HtsFile
    Gene
    //    OntologyClass -> Variant
    HgvsAllele -> Variant
    VcfAllele -> Variant
    SpdiAllele -> Variant
    IscnKaryotype -> Variant
    }

    // individual.proto
    Individual [
    label = "{Individual| id: String\l alternate_ids: String [0..*]\l date_of_birth: Timestamp\l time_at_encounter: TimeElement\l vital_status: VitalStatus\l sex: Sex\l karyotypic_sex: KaryotypicSex\l gender: OntologyClass\l taxonomy: OntologyClass\l}"
    ]

    VitalStatus [
    label = "{VitalStatus| status: Status\l time_of_death: TimeElement\l cause_of_death: OntologyClass\l survival_time_in_days: Integer\l}"
    ]
    //    TimeElement -> Individual
    VitalStatus -> Individual
    Sex -> Individual
    KaryotypicSex -> Individual
    //    OntologyClass -> Individual

    //    TimeElement -> VitalStatus
    //    OntologyClass -> VitalStatus

    // interpretation.proto
    Interpretation [
    label = "{Interpretation| id: String\l progress_status: ProgressStatus\l  diagnosis: Diagnosis\l summary: String\l}"
    ]

    ProgressStatus [
    label = "{ProgressStatus \<enum\>| 0 = UNKNOWN_PROGRESS\l 1 = IN_PROGRESS\l  2 = COMPLETED\l 3 = SOLVED\l 4 = UNSOLVED\l}"
    ]

    Diagnosis [
    label = "{Diagnosis| disease: OntologyClass\l genomic_interpretations: GenomicInterpretation [0..n]\l}"
    ]

    GenomicInterpretation [
    label = "{GenomicInterpretation| subject_or_biosample_id: String\l interpretation_status: InterpretationStatus\l call: \{Gene \| VariantInterpretation\}}"
    ]

    InterpretationStatus [
    label = "{InterpretationStatus \<enum\>| 0 = UNKNOWN_STATUS\l 1 =        REJECTED\l 2 = CANDIDATE\l 3 = CONTRIBUTORY\l 4 = ACTIONABLE\l}"
    ]

    VariantInterpretation [
    label = "{VariantInterpretation| variantFinding: VariantFinding\l varant: Variant\l}"
    ]

    VariantFinding [
    label = "{VariantFinding \<enum\>|  0 = UNCERTAIN_SIGNIFICANCE\l 1 =       PATHOGENIC\l 2 = LIKELY_PATHOGENIC\l 3 = BENIGN\l 4 = LIKELY_BENIGN\l}"
    ]

    subgraph interpretationProto {
    label = "interpretation"
    ProgressStatus -> Interpretation
    Diagnosis -> Interpretation

    //    OntologyClass -> Diagnosis
    GenomicInterpretation -> Diagnosis

    InterpretationStatus -> GenomicInterpretation
    Gene -> GenomicInterpretation
    VariantInterpretation -> GenomicInterpretation

    VariantFinding -> VariantInterpretation
    Variant -> VariantInterpretation
    }

    // measurement.proto
    Measurement [
    label = "{Measurement|  description: String\l assay: OntologyClass\l measurement_value: \{ Value \| ComplexValue\}\l time_observed: TimeElement\l procedure: Procedure\l }"
    ]
    subgraph measurementProto {
    //    OntologyClass -> Measurement
    Value -> Measurement
    ComplexValue -> Measurement
    //    TimeElement -> Measurement
    Procedure -> Measurement
    }

    // medical_action.proto
    MedicalAction [
    label = "{MedicalAction| action: \{\Procedure \| Treatment \| ChemoTherapyTreatment \| HormoneTherapyTreatment \| RadiationTherapyTreatment \| TherapeuticRegimen\}\l treatment_target: OntologyClass\l treatment_intent: OntologyClass\l response_to_treatment: OntologyClass\l adverse_events: OntologyClass [0..*]\l treatment_termination_reason: OntologyClass\l}"
    ]

    Treatment [
    label = "{Treatment| agent: OntologyClass\l route_of_administration: OntologyClass\l dose_intervals: DoseInterval [0..*]\l drug_type: DrugType\l }"
    ]

    ChemoTherapyTreatment [
    label = "{ChemoTherapyTreatment| treatment: Treatment\l cumulative_dose: CumulativeDose\l}"
    ]

    HormoneTherapyTreatment [
    label = "{HormoneTherapyTreatment| treatment: Treatment\l cumulative_dose: CumulativeDose\l}"
    ]

    RadiationTherapyTreatment [
    label = "{RadiationTherapyTreatment| treatment: Treatment\l body_site: OntologyClass\l fractions: Integer\l}"
    ]

    TherapeuticRegimen [
    label = "{TherapeuticRegimen| identifier: \{ExternalReference \| OntologyClass\} start_time: TimeElement\l end_time: TimeElement\l status: RegimenStatus\l}"
    ]

    RegimenStatus [
    label = "{RegimenStatus \<enum\>| 0 = UNKNOWN\l 1 = STARTED\l 2 = COMPLETED\l 3 = DISCONTINUED}"
    ]

    CumulativeDose [
    label = "{CumulativeDose| quantity: Quantity\l}"
    ]

    DoseInterval [
    label = "{DoseInterval| quantity: Quantity\l schedule_frequency: OntologyClass\l interval: TimeInterval\l}"
    ]
    DrugType [
    label = "{DrugType \<enum\>| 0 = UNKNOWN_DRUG_TYPE\l 1 = PRESCRIPTION\l 2 = EHR_MEDICATION_LIST\l 3 = ADMINISTRATION_RELATED_TO_PROCEDURE\l}"
    ]

    subgraph medicalActionProto {
    //    OntologyClass -> MedicalAction
    Procedure -> MedicalAction
    Treatment -> MedicalAction
    ChemoTherapyTreatment -> MedicalAction
    HormoneTherapyTreatment -> MedicalAction
    RadiationTherapyTreatment -> MedicalAction
    TherapeuticRegimen -> MedicalAction

    //    OntologyClass -> Treatment
    DoseInterval -> Treatment
    DrugType -> Treatment

    Quantity -> DoseInterval
    //    OntologyClass -> DoseInterval
    TimeInterval -> DoseInterval

    Quantity -> CumulativeDose

    Treatment -> ChemoTherapyTreatment
    CumulativeDose -> ChemoTherapyTreatment

    Treatment -> HormoneTherapyTreatment
    CumulativeDose -> HormoneTherapyTreatment

    Treatment -> RadiationTherapyTreatment
    //    OntologyClass -> RadiationTherapyTreatment

    ExternalReference -> TherapeuticRegimen
    //    OntologyClass -> TherapeuticRegimen
    //    TimeElement -> TherapeuticRegimen
    RegimenStatus -> TherapeuticRegimen
    }

    // pedigree.proto
    Pedigree [
    label = "{Pedigree| persons: Person [0..*]\l}"
    ]

    Person [
    label = "{Person| family_id: String\l individual_id: String\l paternal_id: String\l maternal_id: String\l sex: Sex\l affected_status: AffectedStatus\l}"
    ]

    AffectedStatus [
    label = "{AffectedStatus \<enum\>| 0 = MISSING\l 1 = UNAFFECTED\l 2 = AFFECTED\l}"
    ]

    subgraph pedigreeProto {
    Person -> Pedigree

    Sex -> Person
    AffectedStatus -> Person
    }

    // phenotypic_feature.proto
    PhenotypicFeature [
    label = "{PhenotypicFeature| description: String\l type: OntologyClass\l negated: Boolean\l severity: OntologyClass\l modifiers: OntologyClass [0..*]\l onset: TimeElement\l resolution: TimeElement\l evidence Evidence [0..*]\l}"
    ]
    //    OntologyClass -> PhenotypicFeature
    //    TimeElement -> PhenotypicFeature
    Evidence -> PhenotypicFeature

    // phenopackets.proto
    Phenopacket [
    label = "{Phenopacket| id: String [1..1]\l subject: Individual [1..1]\l phenotypic_features: PhenotypicFeature [0..*]\l measurements: Measurement [0..*]\l biosamples: Biosample [0..*]\l interpretations: interpretation [0..*]\l diseases: Disease [0..*]\l medical_actions: MedicalAction [0..*]\l hts_files: HtsFile [0..*]\l meta_data: MetaData [1..1]\l}"
    ]

    Family [
    label = "{Family| id: String [1..1]\l proband: Phenopacket [1..1]\l relatives: Phenopacket [0..*]\l consanguinous_parents: Boolean\l pedigree: Pedigree [1..1]\l hts_files: HtsFile [0..*]\l meta_data: MetaData [1..1]\l}"
    ]

    Cohort [
    label = "{Cohort| id: String [1..1]\l description: String [0..1]\l members: Phenopacket [0..*]\l hts_files: HtsFile [0..*]\l meta_data: MetaData [1..1]\l}"
    ]

    MetaData [
    label = "{MetaData| created: google.protobuf.Timestamp\l created_by: String\l submitted_by: String\l resources: Resource [0..*]\l updates: Update [0..*]\l phenopacket_schema_version: String\l external_references: ExternalReference [0..*]\l}"
    ]

    Resource [
    label = "{Resource| id: String\l name: String\l url: String\l version: String\l namespace_prefix: String\l iri_prefix: string\l}"
    ]

    Update [
    label = "{Update| timestamp: Timestamp\l updated_by: String\l comment: String\l}"
    ]

    subgraph phenopacketsProto {
    Resource -> MetaData
    Update -> MetaData
    ExternalReference -> MetaData
    ExternalReference -> Evidence
    //    OntologyClass -> Evidence

    Individual -> Phenopacket
    PhenotypicFeature -> Phenopacket
    Measurement -> Phenopacket
    Biosample -> Phenopacket
    Interpretation -> Phenopacket
    Disease -> Phenopacket
    MedicalAction -> Phenopacket
    HtsFile -> Phenopacket
    MetaData -> Phenopacket

    Phenopacket -> Family
    Pedigree -> Family
    HtsFile -> Family
    MetaData -> Family

    Phenopacket -> Cohort
    HtsFile -> Cohort
    MetaData -> Cohort
    }

}
